//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.07.23 at 11:41:46 AM EEST 
//

package coffeeMachine.dto.reports;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

/**
 * <p>
 * Java class for anonymous complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="Ordered-Drinks">
 *           &lt;complexType>
 *             &lt;complexContent>
 *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 &lt;sequence>
 *                   &lt;element name="drink" maxOccurs="unbounded" minOccurs="0">
 *                     &lt;complexType>
 *                       &lt;simpleContent>
 *                         &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                           &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *                           &lt;attribute name="amount" use="required" type="{http://www.w3.org/2001/XMLSchema}byte" />
 *                         &lt;/extension>
 *                       &lt;/simpleContent>
 *                     &lt;/complexType>
 *                   &lt;/element>
 *                 &lt;/sequence>
 *               &lt;/restriction>
 *             &lt;/complexContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *         &lt;element name="Total" type="{http://www.w3.org/2001/XMLSchema}nonNegativeInteger"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = { "orderedDrinks", "total" })
@XmlRootElement(name = "Report")
@XmlSeeAlso({DrinksReportDTO.OrderedDrinks.class, DrinksReportDTO.OrderedDrinks.Drink.class})
public class DrinksReportDTO {

	@XmlElement(name = "Ordered-Drinks", required = true)
	protected DrinksReportDTO.OrderedDrinks orderedDrinks;
	@XmlElement(name = "Total", required = true)
	@XmlSchemaType(name = "nonNegativeInteger")
	protected int total;

	/**
	 * Gets the value of the orderedDrinks property.
	 * 
	 * @return possible object is {@link DrinksReportDTO.OrderedDrinks }
	 * 
	 */
	public DrinksReportDTO.OrderedDrinks getOrderedDrinks() {
		return orderedDrinks;
	}

	/**
	 * Sets the value of the orderedDrinks property.
	 * 
	 * @param value
	 *            allowed object is {@link DrinksReportDTO.OrderedDrinks }
	 * 
	 */
	public void setOrderedDrinks(DrinksReportDTO.OrderedDrinks value) {
		this.orderedDrinks = value;
	}

	/**
	 * Gets the value of the total property.
	 * 
	 * @return possible object is {@link int }
	 * 
	 */
	public int getTotal() {
		return total;
	}

	/**
	 * Sets the value of the total property.
	 * 
	 * @param value
	 *            allowed object is {@link int }
	 * 
	 */
	public void setTotal(int value) {
		this.total = value;
	}

	/**
	 * <p>
	 * Java class for anonymous complex type.
	 * 
	 * <p>
	 * The following schema fragment specifies the expected content contained
	 * within this class.
	 * 
	 * <pre>
	 * &lt;complexType>
	 *   &lt;complexContent>
	 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
	 *       &lt;sequence>
	 *         &lt;element name="drink" maxOccurs="unbounded" minOccurs="0">
	 *           &lt;complexType>
	 *             &lt;simpleContent>
	 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
	 *                 &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
	 *                 &lt;attribute name="amount" use="required" type="{http://www.w3.org/2001/XMLSchema}byte" />
	 *               &lt;/extension>
	 *             &lt;/simpleContent>
	 *           &lt;/complexType>
	 *         &lt;/element>
	 *       &lt;/sequence>
	 *     &lt;/restriction>
	 *   &lt;/complexContent>
	 * &lt;/complexType>
	 * </pre>
	 * 
	 * 
	 */
	@XmlAccessorType(XmlAccessType.FIELD)
	@XmlType(name = "", propOrder = { "drink" })
	@XmlSeeAlso({DrinksReportDTO.OrderedDrinks.Drink.class})
	public static class OrderedDrinks {

		protected List<DrinksReportDTO.OrderedDrinks.Drink> drink;

		/**
		 * Gets the value of the drink property.
		 * 
		 * <p>
		 * This accessor method returns a reference to the live list, not a
		 * snapshot. Therefore any modification you make to the returned list
		 * will be present inside the JAXB object. This is why there is not a
		 * <CODE>set</CODE> method for the drink property.
		 * 
		 * <p>
		 * For example, to add a new item, do as follows:
		 * 
		 * <pre>
		 * getDrink().add(newItem);
		 * </pre>
		 * 
		 * 
		 * <p>
		 * Objects of the following type(s) are allowed in the list
		 * {@link DrinksReportDTO.OrderedDrinks.Drink }
		 * 
		 * 
		 */
		public List<DrinksReportDTO.OrderedDrinks.Drink> getDrink() {
			if (drink == null) {
				drink = new ArrayList<DrinksReportDTO.OrderedDrinks.Drink>();
			}
			return this.drink;
		}

		/**
		 * <p>
		 * Java class for anonymous complex type.
		 * 
		 * <p>
		 * The following schema fragment specifies the expected content
		 * contained within this class.
		 * 
		 * <pre>
		 * &lt;complexType>
		 *   &lt;simpleContent>
		 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
		 *       &lt;attribute name="name" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
		 *       &lt;attribute name="amount" use="required" type="{http://www.w3.org/2001/XMLSchema}byte" />
		 *     &lt;/extension>
		 *   &lt;/simpleContent>
		 * &lt;/complexType>
		 * </pre>
		 * 
		 * 
		 */
		@XmlAccessorType(XmlAccessType.FIELD)
		@XmlType(name = "", propOrder = { "value" })
		public static class Drink {

			@XmlValue
			protected String value;
			@XmlAttribute(name = "name", required = true)
			protected String name;
			@XmlAttribute(name = "amount", required = true)
			protected int amount;

			/**
			 * Gets the value of the value property.
			 * 
			 * @return possible object is {@link String }
			 * 
			 */
			public String getValue() {
				return value;
			}

			/**
			 * Sets the value of the value property.
			 * 
			 * @param value
			 *            allowed object is {@link String }
			 * 
			 */
			public void setValue(String value) {
				this.value = value;
			}

			/**
			 * Gets the value of the name property.
			 * 
			 * @return possible object is {@link String }
			 * 
			 */
			public String getName() {
				return name;
			}

			/**
			 * Sets the value of the name property.
			 * 
			 * @param value
			 *            allowed object is {@link String }
			 * 
			 */
			public void setName(String value) {
				this.name = value;
			}

			/**
			 * Gets the value of the amount property.
			 * 
			 */
			public int getAmount() {
				return amount;
			}

			/**
			 * Sets the value of the amount property.
			 * 
			 */
			public void setAmount(int value) {
				this.amount = value;
			}

			@Override
			public String toString() {
				String output = System.lineSeparator() + this.name + " - "
						+ String.valueOf(this.amount);
				return output;
			}

			@Override
			public int hashCode() {
				final int prime = 31;
				int result = 1;
				result = prime * result + amount;
				result = prime * result
						+ ((name == null) ? 0 : name.hashCode());
				return result;
			}

			@Override
			public boolean equals(Object obj) {
				if (this == obj)
					return true;
				if (obj == null)
					return false;
				if (!(obj instanceof Drink))
					return false;
				Drink other = (Drink) obj;
				if (amount != other.amount)
					return false;
				if (name == null) {
					if (other.name != null)
						return false;
				} else if (!name.equals(other.name))
					return false;
				return true;
			}
		}
		
		@Override
		public String toString() {
			String output = System.lineSeparator();
			for(OrderedDrinks.Drink d : drink)
			{
				output += d.toString();
			}
			return output;
		}

		@Override
		public int hashCode() {
			return drink.hashCode();
		}

		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (!(obj instanceof OrderedDrinks))
				return false;
			OrderedDrinks other = (OrderedDrinks) obj;
			if (drink == null) {
				if (other.drink != null)
					return false;
			} else if (!drink.equals(other.drink))
				return false;
			return true;
		}

	}

	@Override
	public String toString() {
		return orderedDrinks.toString() + System.lineSeparator() + "Total: " + total;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((orderedDrinks == null) ? 0 : orderedDrinks.hashCode());
		result = prime * result + total;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof DrinksReportDTO))
			return false;
		DrinksReportDTO other = (DrinksReportDTO) obj;
		if (orderedDrinks == null) {
			if (other.orderedDrinks != null)
				return false;
		} else if (!orderedDrinks.equals(other.orderedDrinks))
			return false;
		if (total != other.total)
			return false;
		return true;
	}

}
